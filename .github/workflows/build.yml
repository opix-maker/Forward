name: Build IMDb Discovery Engine Data

on:
  workflow_dispatch: # 手动触发
  schedule:
    - cron: '0 */12 * * *' # 每 12 小时触发

permissions:
  contents: write # 部署到分支需要写权限

# 并发控制
concurrency:
  group: ${{ github.workflow }}-build 
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    
    steps:
      # --- 1. 检出代码 ---
      - name: Checkout repository
        uses: actions/checkout@v4
        # 检出到默认位置

      # --- 2. 设置环境和缓存 ---
      - name: Get current date for cache key (UTC)
        id: date
        run: echo "date=$(date -u +'%Y-%m-%d')" >> $GITHUB_OUTPUT

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Cache IMDb datasets and temp datalake
        id: cache-imdb-data
        uses: actions/cache@v4
        with:
          path: |
            imdb-data-platform/datasets/
            imdb-data-platform/temp/
          key: ${{ runner.os }}-imdb-data-${{ steps.date.outputs.date }}
          restore-keys: |
            ${{ runner.os }}-imdb-data-

      # --- 3. 安装和构建 (生成 16 万个文件) ---
      - name: Install dependencies
        working-directory: ./imdb-data-platform
        run: npm install

      - name: Run build script
        working-directory: ./imdb-data-platform
        env:
          TMDB_ACCESS_TOKEN_V4: ${{ secrets.TMDB_ACCESS_TOKEN_V4 }} 
        run: npm run build 
        # 此时 160k+ 文件在 imdb-data-platform/dist/

      # --- 4. 清理磁盘空间 (解决 "No space left on device") ---
      - name: Free up disk space before deployment
        run: |
          echo "Deleting intermediate files (datasets, temp, node_modules)..."
          rm -rf imdb-data-platform/datasets
          rm -rf imdb-data-platform/temp
          rm -rf imdb-data-platform/node_modules
          echo "Disk space freed."

      # --- 5. 准备部署暂存区 ---
      - name: Prepare deployment staging area
        run: |
          mkdir -p deployment_staging
          echo "Moving 160k+ final build artifacts to staging area..."
          shopt -s dotglob
          mv imdb-data-platform/dist/* deployment_staging/
          echo "Files moved to deployment_staging/"

      # --- 6. 使用分块 Git 操作进行部署  ---
      - name: Deploy data with chunked git operations
        uses: EndBug/add-and-commit@v9
        with:
          # 工作目录
          cwd: './deployment_staging'
          # 提交信息
          message: 'Deploy: Automated data update (${{ steps.date.outputs.date }})'
          add: '.'
          split: "5000" 
          push: 'origin HEAD:data-deploy --force' 
          github_token: ${{ secrets.GITHUB_TOKEN }}
          

      # --- 7. 失败通知 ---
      - name: Notify on Failure
        if: failure() 
        run: echo "❌ Build workflow failed! Check logs."
