name: Build IMDb Discovery Engine Data

on:
  workflow_dispatch: # 手动触发
  schedule:
    - cron: '0 */12 * * *' # 每 12 小时触发

permissions:
  contents: write

concurrency:
  group: ${{ github.workflow }}-build 
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 60 
    
    steps:
      # --- 1. 检出主仓库 ---
      - name: Checkout main repository
        uses: actions/checkout@v4
      
      # --- 2. 设置环境和缓存 ---
      - name: Get current date for cache key (UTC)
        id: date
        run: echo "date=$(date -u +'%Y-%m-%d')" >> $GITHUB_OUTPUT

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Cache IMDb datasets and temp datalake
        id: cache-imdb-data
        uses: actions/cache@v4
        with:
          path: imdb-data-platform/datasets/
          key: ${{ runner.os }}-imdb-data-${{ steps.date.outputs.date }}
          restore-keys: |
            ${{ runner.os }}-imdb-data-
      
      # --- 3. 安装和构建 ---
      - name: Install dependencies
        working-directory: ./imdb-data-platform
        run: npm install

      - name: Run build script
        working-directory: ./imdb-data-platform
        env:
          TMDB_ACCESS_TOKEN_V4: ${{ secrets.TMDB_ACCESS_TOKEN_V4 }} 
        run: npm run build 
        # 此时 39万+ 文件在 ./imdb-data-platform/dist/

      # --- 4. 清理磁盘空间 ---
      - name: Free up disk space before deployment
        run: |
          echo "Deleting intermediate files to create space for deployment..."
          # 删除原始数据和中间文件
          rm -rf imdb-data-platform/datasets
          rm -rf imdb-data-platform/temp
          rm -rf imdb-data-platform/node_modules
          echo "Disk space freed."

      # --- 5. 最终部署 ---
      - name: Deploy generated data to target branch
        uses: peaceiris/actions-gh-pages@v3
        with:
          # 提供 Token 进行认证
          github_token: ${{ secrets.GITHUB_TOKEN }}
          
          # 指定要部署的目录 (我们的构建产物)
          publish_dir: ./imdb-data-platform/dist
          
          # 指定目标分支
          publish_branch: data-deploy 
          
          # 提交信息
          commit_message: 'Deploy: Automated data update ${{ steps.date.outputs.date }}'
          keep_files: false
          force_orphan: true

      # --- 6. 失败通知 ---
      - name: Notify on Failure
        if: failure() 
        run: echo "❌ Build workflow failed! Check logs."
