name: Build IMDb Discovery Engine Data

on:
  workflow_dispatch: # 手动触发
  schedule:
    - cron: '0 */12 * * *' # 每 12 小时触发

permissions:
  contents: write # 部署到分支需要写权限

concurrency:
  group: ${{ github.workflow }}-build 
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 90 
    
    steps:
      # --- 1. 检出主仓库 ---
      - name: Checkout main repository
        uses: actions/checkout@v4
      
      # --- 2. 设置环境和缓存 ---
      - name: Get current date for cache key (UTC)
        id: date
        run: echo "date=$(date -u +'%Y-%m-%d')" >> $GITHUB_OUTPUT

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Cache IMDb datasets and temp datalake
        id: cache-imdb-data
        uses: actions/cache@v4
        with:
          path: imdb-data-platform/datasets/
          key: ${{ runner.os }}-imdb-data-${{ steps.date.outputs.date }}
          restore-keys: |
            ${{ runner.os }}-imdb-data-
      
      # --- 3. 安装和构建 ---
      - name: Install dependencies
        working-directory: ./imdb-data-platform
        run: npm install

      - name: Run build script
        working-directory: ./imdb-data-platform
        env:
          TMDB_ACCESS_TOKEN_V4: ${{ secrets.TMDB_ACCESS_TOKEN_V4 }} 
        run: npm run build 
        # 文件现在在 ./imdb-data-platform/dist/

      # --- 4. 清理磁盘空间 ---
      - name: Free up disk space before deployment
        run: |
          echo "Deleting intermediate files to save space..."
          rm -rf imdb-data-platform/datasets
          rm -rf imdb-data-platform/temp
          rm -rf imdb-data-platform/node_modules

      # --- 5. 准备部署分支 ---
      - name: Prepare deployment branch
        run: |
          git config user.name "GitHub Action (Deploy)"
          git config user.email "action@github.com"
          git checkout --orphan data-deploy
          
          # 清理工作区，删除所有旧的主分支文件
          git rm -rf .
          
          echo "Switched to a clean, orphaned data-deploy branch."
      
      # --- 6. 移动构建产物到根目录 ---
      - name: Move build artifacts to root
        run: |
          echo "Moving 400k+ files to the repository root..."
          # 使用 rsync 
          rsync -a --remove-source-files ./imdb-data-platform/dist/ .
          echo "✅ Files moved."

      # --- 7. 手动分块提交和推送---
      - name: Commit and Push changes in Batches
        run: |
          echo "Staging files in batches of 5000 to avoid memory issues..."
          # 关键命令：查找所有文件，然后通过 xargs 每 5000 个文件执行一次 git add
          find . -type f -print0 | xargs -0 -n 5000 git add
          echo "✅ All files staged."

          # 检查是否有更改
          if git diff --staged --quiet; then
            echo "No changes detected, nothing to commit."
          else
            echo "Committing 390k+ file changes..."
            git commit -m "Deploy: Automated data update (${{ steps.date.outputs.date }})"
            
            echo "Pushing changes to data-deploy branch..."
            git push --force origin data-deploy
            echo "✅ Deployment push complete."
          fi
